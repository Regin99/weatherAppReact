{"version":3,"sources":["components/inputcity/InputCity.jsx","components/foreactitem/ForecastItem.jsx","components/forecastlist/ForecastList.jsx","components/error/Error.jsx","components/loading/Loading.jsx","components/map/Map.jsx","components/app/App.jsx","index.js"],"names":["InputCity","props","useState","city","setCity","onSubmit","event","preventDefault","onLoaded","type","placeholder","value","onChange","target","ForecastItem","icon","date","moment","format","className","alt","src","description","Math","round","temp","ForecastList","loaded","data","Error","message","Loading","mapboxgl","accessToken","Map","mapContainer","useRef","map","marker","lng","setLng","lat","setLat","useEffect","lon","current","container","style","center","zoom","Marker","setLngLat","addTo","ref","App","url","setUrl","error","setError","setLoaded","setData","fetch","then","response","json","undefined","longitude","latitude","getData","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43be2aac.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nexport const InputCity = (props) => {\n  const [city, setCity] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        props.onSubmit(city);\n        props.onLoaded(false);\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder={props.city}\n        value={city}\n        onChange={(event) => {\n          setCity(event.target.value);\n        }}\n      ></input>\n    </form>\n  );\n};\n","import moment from \"moment\";\nimport React from \"react\";\nimport \"../forecastlist/style.css\";\n\nexport const ForecastItem = (props) => {\n  const icon = `./assets/${props.icon}.svg`;\n\n  const date = moment(props.date * 1000).format(\"DD.MM\");\n\n  return (\n    <div className=\"forecast-item\">\n      <p className=\"forecast-item-date\">{date}</p>\n      <img className=\"icon\" alt=\"icon\" src={icon} />\n      <p className=\"forecast-item-description\">{props.description}</p>\n      <div className=\"forecast-item-content\">{Math.round(props.temp)}Â°</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ForecastItem } from \"../foreactitem/ForecastItem.jsx\";\nimport \"./style.css\";\n\nexport const ForecastList = (props) => {\n  return props.loaded ? (\n    <div className=\"forecast-list\">\n      <ForecastItem\n        date={props.data[\"daily\"][0][\"dt\"]}\n        description={props.data[\"daily\"][0][\"weather\"][0][\"description\"]}\n        temp={props.data[\"daily\"][0][\"temp\"][\"day\"]}\n        icon={props.data[\"daily\"][0][\"weather\"][0][\"icon\"]}\n      />\n      <ForecastItem\n        date={props.data[\"daily\"][1][\"dt\"]}\n        description={props.data[\"daily\"][1][\"weather\"][0][\"description\"]}\n        temp={props.data[\"daily\"][1][\"temp\"][\"day\"]}\n        icon={props.data[\"daily\"][1][\"weather\"][0][\"icon\"]}\n      />\n      <ForecastItem\n        date={props.data[\"daily\"][2][\"dt\"]}\n        description={props.data[\"daily\"][2][\"weather\"][0][\"description\"]}\n        temp={props.data[\"daily\"][2][\"temp\"][\"day\"]}\n        icon={props.data[\"daily\"][2][\"weather\"][0][\"icon\"]}\n      />\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nexport const Error = (props) => {\n  return (\n    <div className=\"error\">\n      <h1>Error: {props.message}</h1>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading\"></div>\n    </div>\n  );\n};\n","import React, { useRef, useEffect, useState } from \"react\";\n\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport \"./style.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoicmVnaW45OSIsImEiOiJja3FzbWxwNHIwa3FxMnZvM3N0bmFjNm42In0.xb-QyjtVE5zpuxqtt0qiLw\";\n\nexport const Map = (props) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const marker = useRef(null);\n  const [lng, setLng] = useState(\"-74.0\");\n  const [lat, setLat] = useState(\"40.0\");\n\n  useEffect(() => {\n    setLng(props.lon);\n    setLat(props.lat);\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: 12,\n    });\n    marker.current = new mapboxgl.Marker()\n      .setLngLat([lng, lat])\n      .addTo(map.current);\n  }, [lng, lat, props.lat, props.lon]);\n\n  return <div className=\"map\" ref={mapContainer}></div>;\n};\n","import \"./style.css\";\nimport { InputCity } from \"../inputcity/InputCity.jsx\";\nimport { ForecastList } from \"../forecastlist/ForecastList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Error } from \"../error/Error.jsx\";\nimport { Loading } from \"../loading/Loading.jsx\";\nimport { Map } from \"../map/Map.jsx\";\n// import { CurrentWeather } from \"../currentweather/CurrentWeather.jsx\";\n\nfunction App() {\n  const [url, setUrl] = useState(\n    \"https://ipgeolocation.abstractapi.com/v1/?api_key=1e4c1422984d41aaab344eefe3482250\"\n  );\n  const [error, setError] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState(\"\");\n\n  const getData = (url) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then(\n        (data) => {\n          setData(data);\n          if ((data.lon !== undefined) & (data.lat !== undefined)) {\n            setLoaded(true);\n          } else if (\n            data.longitude !== undefined &&\n            data.latitude !== undefined\n          ) {\n            setUrl(\n              `https://api.openweathermap.org/data/2.5/onecall?lat=${data.latitude}&lon=${data.longitude}&exclude=hourly,minutely&units=metric&appid=6dececf0197315bf6c4d5d5a89331432`\n            );\n            setCity(data.city);\n          }\n        },\n        (error) => {\n          setError(error);\n          setLoaded(true);\n        }\n      );\n  };\n\n  useEffect(() => {\n    getData(url);\n  }, [url]);\n\n  const onSubmit = (city) => {\n    setCity(city);\n    fetch(\n      `https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=6dececf0197315bf6c4d5d5a89331432`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setUrl(\n          `https://api.openweathermap.org/data/2.5/onecall?lat=${data[0].lat}&lon=${data[0].lon}&exclude=hourly,minutely&units=metric&appid=6dececf0197315bf6c4d5d5a89331432`\n        );\n      });\n  };\n\n  return error ? (\n    <Error message={error.message} />\n  ) : !loaded ? (\n    <Loading className=\"App__loading\" />\n  ) : (\n    <div className=\"App\">\n      <InputCity\n        city={city}\n        onSubmit={onSubmit}\n        onLoaded={(flag) => {\n          setLoaded(flag);\n        }}\n      />\n      {/* <CurrentWeather data={data} /> */}\n      <ForecastList data={data} loaded={loaded} />\n      <Map lat={data.lat} lon={data.lon} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport App from \"./components/app/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}