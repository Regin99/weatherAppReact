{"version":3,"sources":["components/inputcity/InputCity.jsx","components/foreactitem/ForecastItem.jsx","components/forecastlist/ForecastList.jsx","components/error/Error.jsx","components/loading/Loading.jsx","components/map/Map.jsx","components/app/App.jsx","index.js"],"names":["InputCity","props","useState","city","setCity","onSubmit","event","preventDefault","onLoaded","type","placeholder","value","onChange","target","ForecastItem","icon","date","moment","format","className","alt","src","description","Math","round","temp","ForecastList","loaded","data","Error","message","Loading","mapboxgl","accessToken","Map","mapContainer","useRef","map","marker","lng","setLng","lat","setLat","useEffect","lon","current","container","style","center","zoom","Marker","setLngLat","addTo","ref","App","url","setUrl","error","setError","setLoaded","setData","fetch","then","response","json","console","log","undefined","longitude","latitude","getData","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78505f8b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const InputCity = (props) => {\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        props.onSubmit(city);\r\n        props.onLoaded(false);\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder={props.city}\r\n        value={city}\r\n        onChange={(event) => {\r\n          setCity(event.target.value);\r\n        }}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"../forecastlist/style.css\";\r\n\r\nexport const ForecastItem = (props) => {\r\n  const icon = `./assets/${props.icon}.svg`;\r\n\r\n  const date = moment(props.date * 1000).format(\"DD.MM\");\r\n\r\n  return (\r\n    <div className=\"forecast-item\">\r\n      <p className=\"forecast-item-date\">{date}</p>\r\n      <img className=\"icon\" alt=\"icon\" src={icon} />\r\n      <p className=\"forecast-item-description\">{props.description}</p>\r\n      <div className=\"forecast-item-content\">{Math.round(props.temp)}Â°</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ForecastItem } from \"../foreactitem/ForecastItem.jsx\";\r\nimport \"./style.css\";\r\n\r\nexport const ForecastList = (props) => {\r\n  return props.loaded ? (\r\n    <div className=\"forecast-list\">\r\n      <ForecastItem\r\n        date={props.data[\"daily\"][0][\"dt\"]}\r\n        description={props.data[\"daily\"][0][\"weather\"][0][\"description\"]}\r\n        temp={props.data[\"daily\"][0][\"temp\"][\"day\"]}\r\n        icon={props.data[\"daily\"][0][\"weather\"][0][\"icon\"]}\r\n      />\r\n      <ForecastItem\r\n        date={props.data[\"daily\"][1][\"dt\"]}\r\n        description={props.data[\"daily\"][1][\"weather\"][0][\"description\"]}\r\n        temp={props.data[\"daily\"][1][\"temp\"][\"day\"]}\r\n        icon={props.data[\"daily\"][1][\"weather\"][0][\"icon\"]}\r\n      />\r\n      <ForecastItem\r\n        date={props.data[\"daily\"][2][\"dt\"]}\r\n        description={props.data[\"daily\"][2][\"weather\"][0][\"description\"]}\r\n        temp={props.data[\"daily\"][2][\"temp\"][\"day\"]}\r\n        icon={props.data[\"daily\"][2][\"weather\"][0][\"icon\"]}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Error = (props) => {\r\n  return (\r\n    <div className=\"error\">\r\n      <h1>Error: {props.message}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <div className=\"loading\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./style.css\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoicmVnaW45OSIsImEiOiJja3FzbWxwNHIwa3FxMnZvM3N0bmFjNm42In0.xb-QyjtVE5zpuxqtt0qiLw\";\r\n\r\nexport const Map = (props) => {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const marker = useRef(null);\r\n  const [lng, setLng] = useState(\"-74.0\");\r\n  const [lat, setLat] = useState(\"40.0\");\r\n\r\n  useEffect(() => {\r\n    setLng(props.lon);\r\n    setLat(props.lat);\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [lng, lat],\r\n      zoom: 12,\r\n    });\r\n    marker.current = new mapboxgl.Marker()\r\n      .setLngLat([lng, lat])\r\n      .addTo(map.current);\r\n  }, [lng, lat, props.lat, props.lon]);\r\n\r\n  return <div className=\"map\" ref={mapContainer}></div>;\r\n};\r\n","import \"./style.css\";\r\nimport { InputCity } from \"../inputcity/InputCity.jsx\";\r\nimport { ForecastList } from \"../forecastlist/ForecastList.jsx\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Error } from \"../error/Error.jsx\";\r\nimport { Loading } from \"../loading/Loading.jsx\";\r\nimport { Map } from \"../map/Map.jsx\";\r\n// import { CurrentWeather } from \"../currentweather/CurrentWeather.jsx\";\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState(\r\n    \"https://ipgeolocation.abstractapi.com/v1/?api_key=0114551861ca4ad5b222750b725754a6\"\r\n  );\r\n  const [error, setError] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const getData = (url) => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (data) => {\r\n          setData(data);\r\n          console.log(data.lon);\r\n          if ((data.lon !== undefined) & (data.lat !== undefined)) {\r\n            setLoaded(true);\r\n          } else if (\r\n            data.longitude !== undefined &&\r\n            data.latitude !== undefined\r\n          ) {\r\n            setUrl(\r\n              `https://api.openweathermap.org/data/2.5/onecall?lat=${data.latitude}&lon=${data.longitude}&exclude=hourly,minutely&units=metric&appid=6dececf0197315bf6c4d5d5a89331432`\r\n            );\r\n            setCity(data.city);\r\n          }\r\n        },\r\n        (error) => {\r\n          setError(error);\r\n          setLoaded(true);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(url);\r\n  }, [url]);\r\n\r\n  const onSubmit = (city) => {\r\n    setCity(city);\r\n    fetch(\r\n      `https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=5&appid=6dececf0197315bf6c4d5d5a89331432`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUrl(\r\n          `https://api.openweathermap.org/data/2.5/onecall?lat=${data[0].lat}&lon=${data[0].lon}&exclude=hourly,minutely&units=metric&appid=6dececf0197315bf6c4d5d5a89331432`\r\n        );\r\n      });\r\n  };\r\n\r\n  return error ? (\r\n    <Error message={error.message} />\r\n  ) : !loaded ? (\r\n    <Loading className=\"App__loading\" />\r\n  ) : (\r\n    <div className=\"App\">\r\n      <InputCity\r\n        city={city}\r\n        onSubmit={onSubmit}\r\n        onLoaded={(flag) => {\r\n          setLoaded(flag);\r\n        }}\r\n      />\r\n      {/* <CurrentWeather data={data} /> */}\r\n      <ForecastList data={data} loaded={loaded} />\r\n      <Map lat={data.lat} lon={data.lon} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport App from \"./components/app/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}